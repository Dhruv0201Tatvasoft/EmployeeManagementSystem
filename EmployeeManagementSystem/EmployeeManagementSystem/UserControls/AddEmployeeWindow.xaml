<UserControl x:Class="EmployeeManagementSystem.UserControls.AddEmployeeWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:EmployeeManagementSystem.UserControls"
             xmlns:converter="clr-namespace:EmployeeManagementSystem.Converter"
             mc:Ignorable="d" 
             xmlns:vm="clr-namespace:EmployeeManagementSystem.ViewModel"
             d:DesignHeight="800" d:DesignWidth="800" Background="White">
    <UserControl.Resources>
        <Style x:Key="CircleButton" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border  Background="Transparent" BorderBrush="Transparent" BorderThickness="1" CornerRadius="10">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <vm:AddEmployeeViewModel x:Key="ViewModel"/>
        <converter:RadioButtonChoiceConverter x:Key="radiobuttonconverter"/>
        <converter:ButtonDisbaleConverter x:Key="ButtonDisableConverter"/>
        <converter:ConvertButton x:Key="ConvertButton"/>

    </UserControl.Resources>
    <UserControl.DataContext>
        <vm:AddEmployeeViewModel/>
    </UserControl.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height=".7*"/>
        </Grid.RowDefinitions>
        <DockPanel  Grid.Row="0"  HorizontalAlignment="Stretch"  Height="auto">
            <TextBlock Text="Employee - Add" Margin="20 20 20 0" VerticalAlignment="Center" FontSize="40"/>
            <Button Content="Back" Name="BackBtn" Click="BackBtn_Click" Style="{DynamicResource ButtonStyle}" Width="70" Height="32" HorizontalAlignment="Right" Margin="0,0,20,7" VerticalAlignment="Bottom"/>
        </DockPanel>
        <Separator Grid.Row="1"  Margin="20 10 20 10" HorizontalAlignment="Stretch" VerticalAlignment="Top"/>
        <TabControl x:Name="TabControl" Margin="20 0 20 20" Grid.Row="2" >
            <TabItem Name="EmployeeDetailsTabItem" Header="Employee Details" Style="{DynamicResource TabItemStyle}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width=".2*" MaxWidth="200"/>
                        <ColumnDefinition Width=".3*" MaxWidth="300"/>
                        <ColumnDefinition Width=".2*" MaxWidth="200"/>
                        <ColumnDefinition Width=".3*" MaxWidth="300" />
                        <ColumnDefinition Width=".1*"/>
                        <ColumnDefinition Width=".1*"/>

                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <ContentControl Style="{DynamicResource CompulsoryInputTextBlock}" MaxWidth="120" Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" Content="Code:" Margin="20 20 0 0" Height="20" Width="auto" />
                    <TextBox Tag="code" Text="{Binding Code, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Name="Code" Grid.Column="1" Grid.Row="0" HorizontalAlignment="Stretch"  Height="32" MaxWidth="250" Style="{DynamicResource CustomInputStyle}" Width="auto" VerticalAlignment="Top" Margin="0,20,0,0"></TextBox>

                    <ContentControl Style="{DynamicResource CompulsoryInputTextBlock}" MaxWidth="120" Grid.Row="1" Grid.Column="0"  VerticalAlignment="Center" Content="First Name:" Margin="20 20 0 0" Height="20" Width="auto"   />
                    <TextBox Tag="firstname" Text="{Binding FirstName, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Name="FirstName" MaxWidth="250" Height="32" Style="{DynamicResource CustomInputStyle}" Width="auto" Grid.Column="1" Grid.Row="1" VerticalAlignment="Top" Margin="0,20,0,0"></TextBox>

                    <ContentControl  Style="{DynamicResource CompulsoryInputTextBlock}" MaxWidth="120" Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" Content="Last Name:" Margin="20 20 0 0" Height="20"  />
                    <TextBox  Tag="lastname" Text="{Binding LastName, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Name="LastName" Grid.Row="1" Grid.Column="3" Height="32" Style="{DynamicResource CustomInputStyle}"  Width="auto"  VerticalAlignment="Top" Margin="0,20,0,0" MaxWidth="250"></TextBox>

                    <ContentControl Style="{DynamicResource CompulsoryInputTextBlock}" MaxWidth="120" Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Content="Email:" Margin="20 20 0 0" Height="20" />
                    <TextBox Tag="email" Text="{Binding Email, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Name="Email"  MaxWidth="250" Grid.Row="2" Grid.Column="1" Height="32" Style="{DynamicResource CustomInputStyle}" Width="auto"  VerticalAlignment="Top" Margin="0,20,0,0"></TextBox>

                    <ContentControl Style="{DynamicResource CompulsoryInputTextBlock}"  MaxWidth="120"  Grid.Row="3" Grid.Column="0"  VerticalAlignment="Center" Content="Password:" Margin="20 20 0 0" Height="20"   />
                    <TextBox Tag="password" Text="{Binding Password, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Name="Password" MaxWidth="250" Grid.Row="3" Grid.Column="1" Height="32" Style="{DynamicResource CustomInputStyle}" Width="auto" VerticalAlignment="Top" Margin="0,20,0,0"></TextBox>

                    <TextBlock  MaxWidth="120" TextWrapping="Wrap" Grid.Row="3"  Grid.Column="2" VerticalAlignment="Center" Text="Confirm Password:" Margin="20 20 0 0" Height="auto"  TextAlignment="Left"  />
                    <TextBox Tag="confirm password" Text="{Binding ConfirmPassword, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Name="ConfirmPassword" MaxWidth="250" Grid.Row="3" Grid.Column="3" Height="32" Width="auto" VerticalAlignment="Top" Style="{DynamicResource CustomInputStyle}" Margin="0,20,0,0"></TextBox>

                    <ContentControl Style="{DynamicResource CompulsoryInputTextBlock}" MaxWidth="120" Grid.Row="4" Grid.Column="0"  VerticalAlignment="Center" Content="Department:" Margin="20 20 0 0" Height="20"  />
                    <ComboBox IsEditable="True" IsReadOnly="True" Text="Select" ItemsSource="{Binding Department}" Name="Department" SelectedItem="{Binding SelectedDepartment, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"  MaxWidth="250" Grid.Row="4" Grid.Column="1" Height="32" Width="auto" Style="{DynamicResource CustomComboBoxStyle}" VerticalAlignment="Top" Margin="0,20,0,0"></ComboBox>

                    <ContentControl Style="{DynamicResource CompulsoryInputTextBlock}" MaxWidth="120" Grid.Row="4" Grid.Column="2" VerticalAlignment="Center" Content="Designation:" Margin="20 20 0 0" Height="20" Width="120" />
                    <ComboBox Text="Select" IsEditable="True" IsReadOnly="True" ItemsSource="{Binding Designation}" Name="Designation" SelectedItem="{Binding SelectedDesignation, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"  MaxWidth="250" Height="32" Width="auto" Grid.Column="3" Grid.Row="4" VerticalAlignment="Top" Style="{DynamicResource CustomComboBoxStyle}"  Margin="0,20,0,0"></ComboBox>

                    <ContentControl Style="{DynamicResource CompulsoryInputTextBlock}" MaxWidth="120"  VerticalAlignment="Center" Content="Joining Date:" Margin="20 20 0 0" Height="20" Grid.Column="0" Grid.Row="5" />
                    <DatePicker Name="JoiningDate" SelectedDateFormat="Long" DisplayDateStart="01/01/1900" DisplayDateEnd="2100/10/12" Text="{Binding JoiningDate, TargetNullValue='', ValidatesOnDataErrors=True, Mode=TwoWay, StringFormat=dd/MM/yyyy, UpdateSourceTrigger=PropertyChanged}"   MaxWidth="250" Grid.Row="5" Grid.Column="1" Height="32" Width="auto"  Style="{DynamicResource CustomDatePickerStyle}"  VerticalAlignment="Top" Margin="0,20,0,0"></DatePicker>

                    <TextBlock MaxWidth="120"  Grid.Row="5" Grid.Column="2" VerticalAlignment="Center" Text="Release Date:" Margin="20 20 0 0" Height="20" TextAlignment="Left" />
                    <DatePicker  Name="ReleaseDate" SelectedDateFormat="Long" DisplayDateStart="01/01/1900" DisplayDateEnd="2100/10/12"  Text="{Binding ReleaseDate, UpdateSourceTrigger=PropertyChanged, TargetNullValue='', ValidatesOnDataErrors=True, Mode=TwoWay, StringFormat=dd/MM/yyyy}"  MaxWidth="250" Height="32" Width="auto" Grid.Column="3" Grid.Row="5" VerticalAlignment="Top"  Style="{DynamicResource CustomDatePickerStyle}"   Margin="0,20,0,0"></DatePicker>


                    <Grid Grid.Row="6" Grid.ColumnSpan="6">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Button Width="120" Height="32" Click="EmployeeDetailsNextBtn_Click" x:Name="EmployeeDetailsNextBtn" Content="Next" Style="{DynamicResource ButtonStyle}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,10,150,5">
                            <Button.IsEnabled>
                                <MultiBinding Converter="{StaticResource ButtonDisableConverter}" Mode="TwoWay">
                                    <Binding ElementName="Code" Path="(Validation.HasError)"/>
                                    <Binding ElementName="FirstName" Path="(Validation.HasError)"/>
                                    <Binding ElementName="LastName" Path="(Validation.HasError)"/>
                                    <Binding ElementName="Email" Path="(Validation.HasError)"/>
                                    <Binding ElementName="Password" Path="(Validation.HasError)"/>
                                    <Binding ElementName="ConfirmPassword" Path="(Validation.HasError)"/>
                                    <Binding ElementName="Department" Path="(Validation.HasError)"/>
                                    <Binding ElementName="Designation" Path="(Validation.HasError)"/>
                                    <Binding ElementName="JoiningDate" Path="(Validation.HasError)"/>
                                    <Binding ElementName="ReleaseDate" Path="(Validation.HasError)"/>
                                </MultiBinding>
                            </Button.IsEnabled>
                        </Button>
                        <Button Command="{Binding ClearEmployeeDetailsCommand}" Width="120" Height="32"  Content="Clear" Style="{DynamicResource ButtonStyle}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,10,5,5"/>
                    </Grid>

                </Grid>
            </TabItem>

            <TabItem Name="PersonalDetailsTabItem" Header="Personal Details" Style="{DynamicResource TabItemStyle}">
                <TabItem.IsEnabled>
                    <MultiBinding Converter="{StaticResource ButtonDisableConverter}" Mode="TwoWay">
                        <Binding ElementName="Code" Path="(Validation.HasError)"/>
                        <Binding ElementName="FirstName" Path="(Validation.HasError)"/>
                        <Binding ElementName="LastName" Path="(Validation.HasError)"/>
                        <Binding ElementName="Email" Path="(Validation.HasError)"/>
                        <Binding ElementName="Password" Path="(Validation.HasError)"/>
                        <Binding ElementName="ConfirmPassword" Path="(Validation.HasError)"/>
                        <Binding ElementName="Department" Path="(Validation.HasError)"/>
                        <Binding ElementName="Designation" Path="(Validation.HasError)"/>
                        <Binding ElementName="JoiningDate" Path="(Validation.HasError)"/>
                        <Binding ElementName="ReleaseDate" Path="(Validation.HasError)"/>
                       
                    </MultiBinding>
                </TabItem.IsEnabled>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width=".2*" MaxWidth="200"/>
                        <ColumnDefinition Width=".3*" MaxWidth="300"/>
                        <ColumnDefinition Width=".2*" MaxWidth="200"/>
                        <ColumnDefinition Width=".3*" MaxWidth="300" />
                        <ColumnDefinition Width=".1*"/>
                        <ColumnDefinition Width=".1*"/>

                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <ContentControl Style="{DynamicResource CompulsoryInputTextBlock}"  MaxWidth="120" Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" Content="Date Of Birth:" Margin="20 20 0 0" Height="20" Width="auto" />
                    <DatePicker Name="DOB"  SelectedDateFormat="Long" DisplayDateStart="01/01/1900" DisplayDateEnd="2100/12/31"  Text="{Binding DOB,UpdateSourceTrigger=PropertyChanged,TargetNullValue='',ValidatesOnDataErrors=True,  Mode=TwoWay, StringFormat=dd/MM/yyyy}"  Grid.Column="1" Grid.Row="0" HorizontalAlignment="Stretch"  Height="32" MaxWidth="250"  Style="{DynamicResource CustomDatePickerStyle}"  Width="auto" VerticalAlignment="Top" Margin="0,20,0,0"></DatePicker>
                    <ContentControl Style="{DynamicResource CompulsoryInputTextBlock}" MaxWidth="120" Grid.Row="0" Grid.Column="2"  VerticalAlignment="Center" Content="Contact Number:" Margin="20 20 0 0" Height="auto" Width="auto"  />
                    <TextBox Tag="contact number" x:Name="ContactNumber" Text="{Binding ContactNumber,Mode=TwoWay,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" Height="32" Style="{DynamicResource CustomInputStyle}" Width="auto" Grid.Column="3" Grid.Row="0" VerticalAlignment="Top" Margin="0,20,0,0"></TextBox>

                    <ContentControl Style="{DynamicResource CompulsoryInputTextBlock}" MaxWidth="120" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Content="Gender:" Margin="20 20 0 0" Height="20"  />
                    <StackPanel Width="auto" Margin="0,20,0,0"  HorizontalAlignment="Stretch"  Height="32" MaxWidth="250"  Orientation="Horizontal"  VerticalAlignment="Top" Grid.Row="1" Grid.Column="1">
                        <RadioButton Content="Male"  IsChecked="{Binding Gender ,ValidatesOnDataErrors=True, Converter={StaticResource radiobuttonconverter},ConverterParameter=Male}" Style="{DynamicResource RadioButtonStyle}" />
                        <RadioButton Content="Female" IsChecked="{Binding Gender , Converter={StaticResource radiobuttonconverter},ConverterParameter=Female}"   Margin="10 0 0 0" Style="{DynamicResource RadioButtonStyle}" />
                    </StackPanel>
                    <ContentControl Style="{DynamicResource CompulsoryInputTextBlock}" MaxWidth="120" Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" Content="Maritial Status:" Margin="20 20 0 0" Height="20" />
                    <ComboBox Text="Select"  IsEditable="True" IsReadOnly="True" Name="MaritalStatus" ItemsSource="{Binding MaritalStatus}" SelectedItem="{Binding SelectedMaritialStatus, Mode=TwoWay,ValidatesOnDataErrors=True}" MaxWidth="250" Grid.Row="1" Grid.Column="3" Height="32" Width="auto" Style="{DynamicResource CustomComboBoxStyle}" VerticalAlignment="Top" Margin="0,20,0,0"></ComboBox>


                    <ContentControl Style="{DynamicResource CompulsoryInputTextBlock}" MaxWidth="120" Grid.Row="2" Grid.Column="0" VerticalAlignment="Top" Content="Present Address:" Margin="20 20 0 0" Height="auto" />
                    <TextBox Tag="present address" Name="PresentAddress" Text="{Binding PresentAddress,Mode=TwoWay,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" MaxLines="20" MinHeight="80" Grid.Row="2" Grid.Column="1" Height="auto" Style="{DynamicResource CustomInputStyle}" Width="auto"  VerticalAlignment="Top" Margin="0,20,0,0"></TextBox>
                    
                    <TextBlock TextWrapping="Wrap" MaxWidth="120" Grid.Row="2" Grid.Column="2" VerticalAlignment="Top" Text="Permanent Address:" Margin="20 20 0 0" Height="auto" TextAlignment="Left" />
                    <StackPanel Margin="0 20 0 0" Grid.Row="2" Grid.Column="3" VerticalAlignment="top" Height="auto"  Orientation="Vertical">
                        <CheckBox IsChecked="{Binding IsCheckBoxChecked,Mode=TwoWay}" MaxWidth="250" Height="auto" Width="auto" VerticalAlignment="Top" Style="{DynamicResource CustomCheckBoxStyle}"  Content="Same as Peresent"/>
                        <TextBox Tag="permanent address" x:Name="PermanentAddress"  Text="{Binding PermanentAddress,Mode=TwoWay,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}" MaxWidth="250" MaxLines="20" MinHeight="80" Grid.Row="2" Grid.Column="1" Height="auto" Style="{DynamicResource CustomInputStyle}" Width="auto"  VerticalAlignment="Top" Margin="0,20,0,0"></TextBox>
                    </StackPanel>
                    <Grid Grid.Row="4" Grid.ColumnSpan="6">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Button x:Name="PersonalDetailsNextBtn" Command="{Binding AddEmployeeCommand}"  Width="120" Height="32" Content="Next" Style="{DynamicResource ButtonStyle}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,10,150,5"
                                >
                            <Button.IsEnabled>
                                <MultiBinding Converter="{StaticResource ButtonDisableConverter}" Mode="TwoWay">
                                    <Binding ElementName="DOB" Path="(Validation.HasError)"/>
                                    <Binding ElementName="ContactNumber" Path="(Validation.HasError)"/>
                                    <Binding ElementName="MaritalStatus" Path="(Validation.HasError)"/>
                                    <Binding ElementName="PresentAddress" Path="(Validation.HasError)"/>
                                    <Binding ElementName="PermanentAddress" Path="(Validation.HasError)"/>
                                </MultiBinding>
                            </Button.IsEnabled>
                        </Button>

                        <Button Command="{Binding ClearPersonlaDetalisCommand}" Width="120" Height="32"  Content="Clear" Style="{DynamicResource ButtonStyle}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,10,5,5"/>
                    </Grid>

                </Grid>
            </TabItem>

            <TabItem Header="Education Details" IsEnabled="False" Name="EducationDetailsTabItem" Style="{DynamicResource TabItemStyle}" >
                
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="100"/>
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Button Command="{Binding AddBlankRowEducation}" Grid.Row="0" Width="120" Height="32"  Margin="0 0 20 0" HorizontalAlignment="Right" Style="{DynamicResource ButtonStyle}" >
                        <Button.Content>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40"/>
                                    <ColumnDefinition Width="80"/>
                                </Grid.ColumnDefinitions>
                                <Image Width="20" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center"  Source="\Icons\AddIcon.png" />
                                <TextBlock Grid.Column="1" Text="ADD" HorizontalAlignment="Left" VerticalAlignment="Center" />
                            </Grid>
                        </Button.Content>
                    </Button>
                    <DataGrid  Name="DGrid" Grid.Row="1" Style="{DynamicResource DataGridStyle}" SelectedItem="{Binding SelectedEmployeeEducationModel}" IsReadOnly="True" VerticalAlignment="Top" ItemsSource="{Binding EmployeeEducationList}" AutoGenerateColumns="False" CanUserAddRows="False" >
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="Qualification" Width=".1*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock  Text="{Binding Qualification}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <TextBox Tag="qualification" Style="{DynamicResource CustomInputStyle}" HorizontalAlignment="Center" Width="auto" MinWidth="150"   Height="32" BorderBrush="Black" BorderThickness="1"  Text="{Binding Qualification, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Board/University" Width=".1*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding BoardUniversity}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <TextBox Tag="board" Style="{DynamicResource CustomInputStyle}" HorizontalAlignment="Center" Width="auto" MinWidth="150"   Height="32" BorderBrush="Black" BorderThickness="1" Text="{Binding BoardUniversity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Name Of Institute" Width=".1*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding InstituteName}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <TextBox Tag="name of school" Style="{DynamicResource CustomInputStyle}" HorizontalAlignment="Center" Width="auto" MinWidth="150"   Height="32" BorderBrush="Black" BorderThickness="1" Text="{Binding InstituteName, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="State" Width=".1*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding State}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <TextBox Tag="state" Style="{DynamicResource CustomInputStyle}" HorizontalAlignment="Center" Width="auto" MinWidth="150"   Height="32" BorderBrush="Black" BorderThickness="1" Text="{Binding State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Passing Year" Width=".1*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding PassingYear}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <TextBox Tag="year" Style="{DynamicResource CustomInputStyle}" HorizontalAlignment="Center" Width="auto" MinWidth="150"   Height="32" BorderBrush="Black" BorderThickness="1" Text="{Binding PassingYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Percentage" Width=".1*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Percentage,StringFormat={}{0}%}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <TextBox Tag="Percentage" Style="{DynamicResource CustomInputStyle}" HorizontalAlignment="Center" Width="auto" MinWidth="150"   Height="32" BorderBrush="Black" BorderThickness="1" Text="{Binding Percentage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Width=".1*" Header="Actions">
                                <DataGridTemplateColumn.CellTemplate >
                                    <DataTemplate>
                                        <StackPanel Width="100" Orientation="Horizontal">
                                            <Button  Margin="10 0 10 0"  Width="30" Height="30" Command="{Binding DataContext.EditEducationRowCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" >
                                                <Image Source="\Icons\EditIcon.png" />
                                            </Button>
                                            <Button Style="{StaticResource CircleButton}" Margin="10 0 10 0"  Width="30" Height="30"  Command="{Binding DataContext.RemoveEducationFromDataBaseCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" >
                                                <Image  Source="\Icons\CircleCrossIcon.png"/>
                                            </Button>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal" Width="100">
                                            <Button Content="Save"  Background="White" Margin="10 0 10 0" Width="40" Height="30"  Command="{Binding DataContext.SaveEducationRowCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}">
                                                
                                            </Button>
                                            <Button Margin="10 0 10 0" Width="30" Height="30" Command="{Binding DataContext.RemoveEducationFromListCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" >
                                                <Image Source="\Icons\CircleCrossIcon.png" />
                                            </Button>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                          
                        </DataGrid.Columns>

                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem Header="Experience Details" Name="ExperienceDetailsTabItem" IsEnabled="False" Style="{DynamicResource TabItemStyle}">
                
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="100"/>
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Button Command="{Binding AddBlankRowExperience}" Grid.Row="0" Width="120" Height="32"  Margin="0 0 20 0" HorizontalAlignment="Right" Style="{DynamicResource ButtonStyle}">
                        <Button.Content>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40"/>
                                    <ColumnDefinition Width="80"/>
                                </Grid.ColumnDefinitions>
                                <Image Width="20" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center"  Source="\Icons\AddIcon.png" />
                                <TextBlock Grid.Column="1" Text="ADD" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            </Grid>
                        </Button.Content>
                    </Button>
                    <DataGrid  Name="ExperienceDataGrid" Grid.Row="1" Style="{DynamicResource DataGridStyle}" SelectedItem="{Binding SelectedEmployeeExperienceModel}" IsReadOnly="True" VerticalAlignment="Top" ItemsSource="{Binding EmployeeExperienceList}" AutoGenerateColumns="False" CanUserAddRows="False" >
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="Organization" Width=".1*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock  Text="{Binding Organization}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <TextBox Tag="organization" Style="{DynamicResource CustomInputStyle}" HorizontalAlignment="Center" Width="auto" MinWidth="150"   Height="32" BorderBrush="Black" BorderThickness="1"  Text="{Binding Organization, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="From" Width=".1*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding FromDate, StringFormat=dd/MM/yyyy}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <DatePicker DisplayDateStart="01/01/1900" DisplayDateEnd="2100/12/31"  Style="{DynamicResource CustomDatePickerStyle}"  HorizontalAlignment="Center" Width="auto" MinWidth="150"   Height="32" BorderBrush="Black" BorderThickness="1" SelectedDate="{Binding FromDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="To" Width=".1*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding ToDate, StringFormat=dd/MM/yyyy}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <DatePicker DisplayDateStart="01/01/1900" DisplayDateEnd="2100/12/31"  Style="{DynamicResource CustomDatePickerStyle}"  HorizontalAlignment="Center" Width="auto" MinWidth="150"   Height="32" BorderBrush="Black" BorderThickness="1" SelectedDate="{Binding ToDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn  Width=".1*" Header="Duration(months)" Binding="{Binding Duration ,Mode=TwoWay}" />
                            <DataGridTemplateColumn Header="Designation" Width=".1*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Designation}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ComboBox Text="Select" IsEditable="True" IsReadOnly="True" Style="{DynamicResource CustomComboBoxStyle}" ItemsSource="{Binding DataContext.Designation, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" SelectedItem="{Binding Designation,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" Width="auto" MinWidth="150"   Height="32" BorderBrush="Black" BorderThickness="1" >
                                            
                                        </ComboBox>
                                        
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Width=".1*" Header="Actions">
                                <DataGridTemplateColumn.CellTemplate >
                                    <DataTemplate>
                                        <StackPanel Width="100" Orientation="Horizontal">
                                            <Button  Margin="10 0 10 0"  Width="30" Height="30"  Command="{Binding DataContext.EditExperienceCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" >
                                                <Image Source="\Icons\EditIcon.png"/>
                                            </Button>
                                            <Button Command="{Binding DataContext.RemoveExperienceFromDataBaseCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"  Margin="10 0 10 0"  Width="30" Height="30" >
                                                <Image  Source="\Icons\CircleCrossIcon.png" />
                                            </Button>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal" Width="100">
                                            <Button Content="Save"  Background="White" Margin="10 0 10 0" Width="40" Height="30"  Command="{Binding DataContext.SaveExperienceRowCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}">
                                            </Button>
                                            <Button Margin="10 0 10 0" Width="30" Height="30"  Command="{Binding DataContext.RemoveExperienceFromList, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}">
                                                <Image Source="\Icons\CircleCrossIcon.png"  />
                                            </Button>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>

                        </DataGrid.Columns>

                    </DataGrid>
                </Grid>
            </TabItem>
        </TabControl>

    </Grid>
</UserControl>
