<Window x:Class="EmployeeManagementSystem.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="EMS" Height="750" Width="1000"
        ResizeMode="CanResizeWithGrip"
        WindowStartupLocation="CenterScreen"
        MinWidth="800" Icon="\Icons\Icon.ico" MinHeight="500">
    <Window.Resources>


        <!--#region SolidColours -->
        <SolidColorBrush x:Key="NormalBackGroundColor" Color="#FAFAFA"/>
        <SolidColorBrush x:Key="HoverBackGroundColor" Color="#669E40"/>
        <SolidColorBrush x:Key="PressedBackGroundColor" Color="#60943C"/>
        <SolidColorBrush x:Key="DisabledBackGroundColor" Color="#C5E0B4"/>
        <SolidColorBrush x:Key="BorderColor" Color="#507E32"/>
        <SolidColorBrush x:Key="ForeGroundColor" Color="#99000000"/>
        <SolidColorBrush x:Key="DisabledForeGroundColor" Color="#AFABAB"/>
        <!--#endregion-->
        
        <!--#region WindowFontStyle -->
        <Style TargetType="{x:Type Window}">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontWeight" Value="Regular"/>
            <Setter Property="FontFamily" Value="Calibri"/>
        </Style>
        <!--#endregion-->

        <!--#region TextBlockStyleForCompulsoryInputField -->
        <Style x:Key="CompulsoryInputTextBlock" TargetType="{x:Type ContentControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContentControl}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="*" VerticalAlignment="Top" Foreground="Red">
                                <TextBlock.ToolTip>
                                    <TextBlock Text="This field is compulsory to fill"/>
                                </TextBlock.ToolTip>
                            </TextBlock>
                            <TextBlock TextWrapping="WrapWithOverflow" Text="{TemplateBinding Content}" Grid.Column="1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->           

        <!--#region ButtonStyle -->
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border  Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FontWeight" Value="UltraBold"/>
            <Setter Property="Background" Value="#70AD47"/>
            <Setter  Property="Foreground" Value="#FFFFFF"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource HoverBackGroundColor}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource PressedBackGroundColor}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{StaticResource DisabledBackGroundColor}"/>
                    <Setter Property="Foreground" Value="{StaticResource DisabledForeGroundColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->

        <!--#region ComboBoxStyle -->
        <!--ComboBoxToggleButtonTemplate-->
        
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="30" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="0" Background="{StaticResource HoverBackGroundColor}" BorderBrush="{StaticResource BorderColor}" BorderThickness="1" />
                <Border Grid.Column="0" CornerRadius="0"  Margin="1" Background="{StaticResource NormalBackGroundColor}" BorderBrush="#FF97A0A5" BorderThickness="0,0,1,0" />
                <Path x:Name="Arrow" Grid.Column="1" Fill="Black" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M0,0 L4,6 L8,0 Z" />
            </Grid>
        </ControlTemplate>

        <!--ComboBoxTextBoxTemplate-->
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Grid>
                <Border x:Name="PART_ContentHost" Focusable="False" Background="{StaticResource NormalBackGroundColor}"/>
                <TextBlock x:Name="Placeholder" Width="auto"  Foreground="LightGray" Margin="3,3,23,3" Visibility="Collapsed"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource DisabledBackGroundColor}"/>
                </Trigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                    <Setter TargetName="Placeholder" Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!--ComboBoxTemplate-->

        <Style x:Key="CustomComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Background" Value="{StaticResource NormalBackGroundColor}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton  Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}"  Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent }}" ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite"  Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="5,3,23,3" VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True"
                          
                            Background="{StaticResource NormalBackGroundColor}"
                            Foreground="Black"
                            Visibility="Hidden"
                            Text="{TemplateBinding Text}"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                                <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                x:Name="DropDownBorder"
                                Background="{StaticResource NormalBackGroundColor}"
                                    
                                BorderThickness="1"
                                BorderBrush="{StaticResource BorderColor}"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}" />
                            </Trigger>

                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForeGroundColor}"/>
                                <Setter Property="Background" Value="{StaticResource DisabledBackGroundColor}"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ComboBoxItemTemplate-->

        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate  TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource HoverBackGroundColor}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        </Style>
        
        <!--#endregion-->

        <!--#region RadioButtonStyle -->
        <Style x:Key="RadioButtonStyle" TargetType="RadioButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate  TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="White" Cursor="Hand">
                            <BulletDecorator.Bullet>
                                <Grid Height="16" Width="16">
                                    <Border Name="RadioOuter" Background="Transparent" BorderBrush="{StaticResource BorderColor}" BorderThickness="2" CornerRadius="10" />
                                    <Border CornerRadius="10" Margin="4" Name="RadioMark" Background="{StaticResource NormalBackGroundColor}" Visibility="Hidden" />
                                </Grid>
                            </BulletDecorator.Bullet>
                            <TextBlock Margin="3,1,3,0" Foreground="{StaticResource ForeGroundColor}" >
                        <ContentPresenter />
                            </TextBlock>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="RadioOuter" Property="Background" Value="#70AD47" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="RadioOuter" Property="BorderBrush" Value="{StaticResource ForeGroundColor}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsChecked" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="RadioOuter" Property="Background" Value="{StaticResource HoverBackGroundColor}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True"/>
                                    <Condition Property="IsPressed" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="RadioOuter" Property="Background" Value="{StaticResource PressedBackGroundColor}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="False"/>
                                    <Condition Property="IsChecked" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="RadioOuter" Property="Background" Value="{StaticResource DisabledBackGroundColor}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="RadioOuter" Property="Background" Value="#CC000000"/>

                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="False"/>
                                    <Condition Property="IsPressed" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="RadioOuter" Property="Background" Value="#FF000000"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="False"/>
                                    <Condition Property="IsEnabled" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="RadioOuter" Property="Background" Value="#66000000"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region CheckBoxStyle -->
        <Style TargetType="CheckBox" x:Key="CustomCheckBoxStyle">
            <Setter Property="Background" Value="{StaticResource NormalBackGroundColor}" />
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>

            <Setter Property="Foreground" Value="#70AD47"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Width="32" Height="32" >
                                <Grid>

                                    <Path Stretch="Uniform" Width="25" Height="20" Fill="{TemplateBinding Foreground}" Name="eliCheck" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Visibility="Collapsed"/>
                                </Grid>
                            </Border>
                            <TextBlock Margin="5,0,0,0"  VerticalAlignment="Center" Foreground="Black" Text="{TemplateBinding Content}"></TextBlock>
                        </StackPanel>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="eliCheck" Property="Visibility" Value="Visible"></Setter>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region TextBoxStyle -->
        <Style x:Key="CustomInputStyle" TargetType="{x:Type TextBox}" >
            <Setter Property="OverridesDefaultStyle" Value="False"/>
            <Setter Property="Background" Value="{StaticResource NormalBackGroundColor}" />
            <Setter Property="BorderBrush" Value="#FF7D8683" />
            <Setter Property="Foreground" Value="#99000000" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <TextBox VerticalContentAlignment="Center" Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" 
                                 Background="Transparent" 
                                 Panel.ZIndex="2" />
                            <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="Foreground" Value="{StaticResource ForeGroundColor}"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                <Setter Property="BorderBrush" Value="{StaticResource NormalBackGroundColor}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}" />
                </Trigger>

                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#F3F3F3" />
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="Background" Value="#FFFFFF" />
                    <Setter Property="BorderBrush" Value="{StaticResource BorderColor}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#33000000"/>
                    <Setter Property="Foreground" Value="#66000000" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->

        <!--#region DatePicketStyle -->
        <Style x:Key="CustomDatePickerStyle" TargetType="{x:Type DatePicker}">
            <Setter Property="Background" Value="{StaticResource NormalBackGroundColor}" />
            <Setter Property="BorderBrush" Value="#FF7D8683" />
            <Setter Property="Foreground" Value="#99000000" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}" />
                </Trigger>

                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#F3F3F3" />
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="Background" Value="#FFFFFF" />
                    <Setter Property="BorderBrush" Value="{StaticResource BorderColor}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#33000000"/>
                    <Setter Property="Foreground" Value="#66000000" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->

        <!--#region DataGridStyle -->
        <Style x:Key="DataGridStyle" TargetType="DataGrid">
            <Setter Property="AlternatingRowBackground" Value="#EBF1E9" />
            <Setter Property="Foreground" Value="#000000" />
            <Setter Property="RowStyle">
                <Setter.Value>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Foreground" Value="#000000"/>
                        <Style.Triggers >
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource HoverBackGroundColor}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>

            <Setter Property="CellStyle">
                <Setter.Value>
                    <Style TargetType="DataGridCell">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridCell}">
                                    <Grid Background="{TemplateBinding Background}">
                                        <ContentPresenter VerticalAlignment="Center"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Height" Value="50"/>
                        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                        <Setter Property="Foreground" Value="#000000"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{StaticResource PressedBackGroundColor}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>

            <Setter Property="ColumnHeaderStyle">
                <Setter.Value>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="Background" Value="#70AD47" />
                        <Setter Property="Foreground" Value="#FFFFFF" />
                        <Setter Property="Height" Value="50"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource PressedBackGroundColor}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region MenuItemStyle -->
        <Style x:Key="MenuItemStyle" TargetType="{x:Type MenuItem}">
            <Setter Property="Background" Value="{StaticResource NormalBackGroundColor}" />
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Width" Value="120"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Regular"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">

                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0.5">
                            <Grid>
                                <ContentPresenter Content="{TemplateBinding Header}"
                                          HorizontalAlignment="Center" 
                                          VerticalAlignment="Center" 
                                          Margin="10"/>
                                <Popup Name="Popup" Placement="Bottom"    IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="True" PopupAnimation="Fade">
                                    <Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="LightGray" BorderBrush="Transparent" BorderThickness="1" >
                                        <StackPanel IsItemsHost="True" SnapsToDevicePixels="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource HoverBackGroundColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource PressedBackGroundColor}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{StaticResource DisabledBackGroundColor}"/>
                                <Setter Property="Foreground" Value="{StaticResource ForeGroundColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region TabItemStyle -->
        <Style x:Key="TabItemStyle" TargetType="TabItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border  Name="Border" TextBlock.TextAlignment="Center" Margin="2 0 2 0"  BorderThickness="0.5" BorderBrush="{StaticResource BorderColor}" Background="{TemplateBinding Background}" >
                            <ContentPresenter Height="30" Margin="0 5 0 0" ContentSource="Header" Width="120"  />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBackGroundColor}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource HoverBackGroundColor}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackGroundColor}"/>
                                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="#AFABAB"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        
    </Window.Resources>

    <ScrollViewer>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Border x:Name="menuitem" BorderBrush="Black" BorderThickness="0.5">
                <DockPanel  Grid.Row="0" >

                    <Menu  Grid.Column="0" x:Name="MenuControl" HorizontalAlignment="Stretch" VerticalAlignment="Top"  Grid.ColumnSpan="2">

                        <MenuItem Header="Dashboard" Style="{StaticResource MenuItemStyle}" Name="DashboardMenuItem"  Click="MenuItem_Click">
                        </MenuItem>
                        <MenuItem Header="Project" Style="{StaticResource MenuItemStyle}"  Click="MenuItem_Click">

                        </MenuItem>
                        <MenuItem Header="Employee" Style="{StaticResource MenuItemStyle}"  Click="MenuItem_Click">
                        </MenuItem>
                        <MenuItem Header="Master" x:Name="Master"   Style="{StaticResource MenuItemStyle}" >

                            <MenuItem Header="Technology" Click="MenuItem_Click"  Style="{StaticResource MenuItemStyle}"  />

                            <MenuItem Header="Skill" Click="MenuItem_Click" Style="{StaticResource MenuItemStyle}" />
                        </MenuItem>
                    </Menu>
                    <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                        <Button x:Name="login" Click="LoginClick"  Content="Login" Width="70"  Margin="0 0 20 0" Style="{StaticResource ButtonStyle}"/>
                        <Button  ToolTip="About" Click="InfoButtonClicked"  Height="auto" Width="39">
                            <Image Source="\Icons\AboutIcon.png" Width="auto" Height="auto"/>
                        </Button>
                    </StackPanel>
                </DockPanel>
            </Border>
            <ContentControl Grid.Row="1" Grid.ColumnSpan="2" Name="mainContent">

            </ContentControl>
            <Popup PlacementTarget="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" Placement="Center"  x:Name="MyPopup" IsOpen="False" Width="600" Height="650" StaysOpen="True" >

                <Grid>
                    <Border BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left"  VerticalAlignment="Top" Width="600" Height="650">
                        <Grid Background="White" Width="600" Height="650">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height=".8*"/>

                            </Grid.RowDefinitions>
                            <DockPanel  Grid.Row="0">
                                <TextBlock VerticalAlignment="Center" Margin="20 10 0 0" Text="About" Height="auto" DockPanel.Dock="Left" FontSize="26" />
                                <Button Click="ClosePopUpClick"  Background="Transparent" BorderBrush="Transparent" Margin="15 10 10 0" Width="30" Height="30" HorizontalAlignment="Right" VerticalAlignment="Top">

                                    <Image Source="\Icons\CancelIcon.png"/>
                                </Button>
                            </DockPanel>
                            <Grid Margin="20 20 20 30" Grid.Row="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="50" />
                                    <RowDefinition Height="60"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TextBlock Text="Employee Management System" FontSize="30" FontWeight="Bold" TextDecorations="Underline" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <TextBlock Text="Version: 1.0.0.0" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                <TextBlock Text="Copyright @2022" FontWeight="Bold" FontSize="16" Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
                            </Grid>
                        </Grid>
                    </Border>
                </Grid>
            </Popup>
        </Grid>
    </ScrollViewer>



</Window>
